name: Laravel NSTP

# define when the action should run
on:
  push:
    branches: [ "main" ]

# define the jobs
jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    # use the latest version of the PHP
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    # use the latest version of the composer
    - uses: actions/checkout@v4

    # copy the .env.example file to .env
    - name: Copy .env
      run: cp .env.example .env

    # set the MySQL database configuration
    - name: Set MySQL Database Configuration
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=laravel" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=root" >> .env

    # install or update the composer
    - name: Install or update composer
      run: composer install

    # install npm dependencies
    - name: Install npm dependencies
      run: npm install

    # run npm build
    - name: Run npm build
      run: npm run build

    # create storage link
    - name: Create storage link
      run: php artisan storage:link

    # create temp folder in public directory
    - name: Create temp folder in public directory
      run: mkdir -p public/temp

    # run the migrations
    - name: Run migrations
      run: php artisan migrate --force

    # run the Laravel Artisan commands
    - name: Optimize Laravel Artisan
      run: php artisan optimize:clear
    # generate the application key
    - name: Generate key
      run: php artisan key:generate
    # set the directory permissions
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    # wait for the MySQL to be ready
    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
          echo "Waiting for database connection..."
          sleep 5
        done

    # run the tests
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      run: php artisan test
